@page
@model eCoinAccountingApp.Pages.Journal.EditModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Edit Journal Entry";

    var currentUser = await UserManager.GetUserAsync(User);
    var isAdminOrManager = SignInManager.IsSignedIn(User) &&
                           (currentUser.Role == "Admin" || currentUser.Role == "Manager");
}

<h1>Edit Journal Entry</h1>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Journal.JournalNum" />

            <div class="form-group">
                <label asp-for="Journal.DateAdded" class="control-label"></label>
                <input asp-for="Journal.DateAdded" class="form-control" readonly />
                <span asp-validation-for="Journal.DateAdded" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Journal.Account.AccountName" class="control-label"></label>
                <input asp-for="Journal.Account.AccountName" class="form-control" readonly />
                <span asp-validation-for="Journal.Account.AccountName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Journal.Description" class="control-label"></label>
                <input asp-for="Journal.Description" class="form-control" />
                <span asp-validation-for="Journal.Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Journal.Debit" class="control-label"></label>
                <input asp-for="Journal.Debit" class="form-control" />
                <span asp-validation-for="Journal.Debit" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Journal.Credit" class="control-label"></label>
                <input asp-for="Journal.Credit" class="form-control" />
                <span asp-validation-for="Journal.Credit" class="text-danger"></span>
            </div>

            @if (isAdminOrManager)
            {
                <!-- Status Dropdown visible to Admin/Manager roles -->
                <div class="form-group">
                    <label asp-for="Journal.Status" class="control-label">Status</label>
                    <select asp-for="Journal.Status" class="form-control">
                        <option value="Pending">Pending</option>
                        <option value="Approved">Approved</option>
                        <option value="Rejected">Rejected</option>
                    </select>
                    <span asp-validation-for="Journal.Status" class="text-danger"></span>
                </div>
            }
            else
            {
                <!-- Hidden input to pass default Status if user is not Admin/Manager -->
                <input type="hidden" asp-for="Journal.Status" value="Pending" />
            }

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Journal/Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
